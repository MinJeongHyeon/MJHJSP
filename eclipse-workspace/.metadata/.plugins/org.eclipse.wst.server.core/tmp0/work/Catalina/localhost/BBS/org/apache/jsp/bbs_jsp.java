/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-07-16 04:15:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import bbs.BbsDAO;
import bbs.Bbs;
import java.util.ArrayList;
import java.text.SimpleDateFormat;
import java.util.Date;

public final class bbs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("bbs.Bbs");
    _jspx_imports_classes.add("bbs.BbsDAO");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/custom.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap-datepicker.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("a, a:hover {\r\n");
      out.write("	color: #000000;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<title>JSP 게시판 웹 사이트</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 /*변수 초기화*/ 
int i=0; 
ArrayList<Bbs> list = null; 
String userID = null; 
if (session.getAttribute("userID") != null) {
	userID = (String)session.getAttribute("userID");
}
int pageNumber = 1;
if (request.getParameter("pageNumber") != null) {
	pageNumber = Integer.parseInt(request.getParameter("pageNumber"));
}
int bunch = 10;
if (request.getParameter("bunch") != null) {
	bunch = Integer.parseInt(request.getParameter("bunch"));
}
String searchOption = null;
if (request.getParameter("searchOption") != null) {
	searchOption = request.getParameter("searchOption");
}
String searchWord = null;
if (request.getParameter("searchWord") != null) {
	searchWord = request.getParameter("searchWord");
}
String dateOption = null;
if (request.getParameter("dateOption") != null) {
	dateOption = request.getParameter("dateOption");
}
String startDate = "00.01.01";
if (request.getParameter("startDate") != null) {
	startDate = request.getParameter("startDate");
}
String endDate= new SimpleDateFormat("YY.MM.dd").format(new Date());
if (request.getParameter("endDate") != null) {
	endDate = request.getParameter("endDate");
}
String sort = "BBSID DESC";
if (request.getParameter("sort") != null) {
	sort = request.getParameter("sort");
}
int start = (pageNumber-1) / 5 + 1;
int end = start * 5;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("// 검색 옵션 선택 시 현재 옵션 텍스트 변경\r\n");
      out.write("function applyOption(option, optionValue){\r\n");
      out.write("	$('#currentSearch').text(option.text);\r\n");
      out.write("	$('#searchOption').val(optionValue);\r\n");
      out.write("	return false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 검색 날짜 선택 시 현재 검색 날짜 텍스트 변경 및 기간 변경\r\n");
      out.write("function applyDate(option, optionValue){\r\n");
      out.write("	$('#currentDate').text(option.text);\r\n");
      out.write("	var d = new Date();\r\n");
      out.write("	var yy = 0;\r\n");
      out.write("	var mm = 0;\r\n");
      out.write("	var dd = 0;\r\n");
      out.write("	if(optionValue == \"1d\") dd = 1;\r\n");
      out.write("	if(optionValue == \"1w\") dd = 7;\r\n");
      out.write("	if(optionValue == \"1m\") mm = 1;\r\n");
      out.write("	if(optionValue == \"6m\") mm = 6;\r\n");
      out.write("	if(optionValue == \"1y\") yy = 1;\r\n");
      out.write("\r\n");
      out.write("	// 전체 기간이 아닐 때 시작 날짜 계산\r\n");
      out.write("	if(optionValue != \"all\") {\r\n");
      out.write("		$('#startDate').val(\r\n");
      out.write("			moment(new Date(\r\n");
      out.write("				d.getFullYear()-yy, \r\n");
      out.write("				d.getMonth()-mm, \r\n");
      out.write("				d.getDate()-dd).toLocaleDateString()\r\n");
      out.write("			).format('YY.MM.DD')\r\n");
      out.write("		);\r\n");
      out.write("	}\r\n");
      out.write("	// 전체 기간일 때 시작 날짜는 2000년 1월 1일\r\n");
      out.write("	else \r\n");
      out.write("		$('#startDate').val(moment(new Date('2000-01-01').toLocaleDateString()).format('YY.MM.DD'));\r\n");
      out.write("	\r\n");
      out.write("	// 기간을 직접 입력하지 않았다면 종료 날짜는 현재 날짜 \r\n");
      out.write("	$('#endDate').val(moment(d.toLocaleDateString()).format('YY.MM.DD'));\r\n");
      out.write("	\r\n");
      out.write("	$('#dateOption').val(optionValue);\r\n");
      out.write("	$('#startDateValue').val($('#startDate').val());\r\n");
      out.write("	$('#endDateValue').val($('#endDate').val());\r\n");
      out.write("	return false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// n개씩 보기 변경 시 새로 submit\r\n");
      out.write("function bunchView(bunch){\r\n");
      out.write("	$('#bunch').val(bunch.getAttribute('class'));\r\n");
      out.write("	$('#pageNumber').val(\"1\");\r\n");
      out.write("	document.getElementById('viewForm').submit();\r\n");
      out.write("	return false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 정렬 버튼\r\n");
      out.write("function sort(sortString){\r\n");
      out.write("	$('#sort').val(sortString);\r\n");
      out.write("	document.getElementById('viewForm').submit();\r\n");
      out.write("	return false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// << 버튼\r\n");
      out.write("function startPage(){\r\n");
      out.write("	$('#pageNumber').val(\"1\");\r\n");
      out.write("	document.getElementById('viewForm').submit();\r\n");
      out.write("	return false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// < 버튼\r\n");
      out.write("function prevPage(){\r\n");
      out.write("	$('#pageNumber').val(\"");
      out.print(end-5);
      out.write("\");\r\n");
      out.write("	document.getElementById('viewForm').submit();\r\n");
      out.write("	return false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// start~end 페이지 버튼\r\n");
      out.write("function currentPage(num){\r\n");
      out.write("	$('#pageNumber').val(num.text);\r\n");
      out.write("	document.getElementById('viewForm').submit();\r\n");
      out.write("	return false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// > 버튼\r\n");
      out.write("function nextPage(){\r\n");
      out.write("	var start = ");
      out.print(start);
      out.write(";\r\n");
      out.write("	var end = ");
      out.print(end);
      out.write(";\r\n");
      out.write("	for(;start<=end;start++){}\r\n");
      out.write("	$('#pageNumber').val(start);\r\n");
      out.write("	document.getElementById('viewForm').submit();\r\n");
      out.write("	return false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// >> 버튼\r\n");
      out.write("function endPage(size){\r\n");
      out.write("	var bunch = ");
      out.print(bunch);
      out.write("\r\n");
      out.write("	var lSize = size-1\r\n");
      out.write("	$('#pageNumber').val(parseInt(lSize/bunch+1));\r\n");
      out.write("	document.getElementById('viewForm').submit();\r\n");
      out.write("	return false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 검색할 때 검색어 체크\r\n");
      out.write("function check(){\r\n");
      out.write("	var word = $('#searchWordInput').val().trim();\r\n");
      out.write("	if(word == null || word == \"\"){\r\n");
      out.write("		alert(\"검색어를 입력하세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	$('#searchWord').val(word);\r\n");
      out.write("	return true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 해당 문서 시작 시 바로 호출\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("	\r\n");
      out.write("	// 날짜 검색 시 보여질 달력\r\n");
      out.write("	$('#startDate').datepicker({\r\n");
      out.write("		autoclose: true,\r\n");
      out.write("		format: \"yy.mm.dd\",	\r\n");
      out.write("	    language : \"ko\",\r\n");
      out.write("	    startDate: \"2000.01.01\",\r\n");
      out.write("	    endDate: new Date()\r\n");
      out.write("	// 달력에서 날짜 선택 시 호출 \r\n");
      out.write("	}).on('changeDate', function(selected){\r\n");
      out.write("		var minDate = new Date(selected.date.valueOf());\r\n");
      out.write("		$('#endDate').datepicker('setStartDate', minDate); \r\n");
      out.write("		$('#currentDate').text(\"직접 입력\");\r\n");
      out.write("		$('#startDateValue').val(moment(minDate).format('YY.MM.DD'));\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	$('#endDate').datepicker({\r\n");
      out.write("		autoclose: true,\r\n");
      out.write("		format: \"yy.mm.dd\",	\r\n");
      out.write("	    language : \"ko\",	 \r\n");
      out.write("	    yearRange: \"2001:2021\",\r\n");
      out.write("	    endDate: new Date()\r\n");
      out.write("	}).on('changeDate', function(selected){\r\n");
      out.write("		var maxDate = new Date(selected.date.valueOf());\r\n");
      out.write("		$('#startDate').datepicker('setEndDate', maxDate); \r\n");
      out.write("		$('#currentDate').text(\"직접 입력\");\r\n");
      out.write("		$('#endDateValue').val(moment(maxDate).format('YY.MM.DD'));\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- 네비게이션 바 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "top.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\" style=\"margin-bottom: 80px;\">\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("	\r\n");
      out.write("		<!-- 게시글 검색 폼 -->\r\n");
      out.write("		<form class=\"navbar-form pull-right\" \r\n");
      out.write("		role=\"search\" id=\"viewForm\" onsubmit=\"return check()\">\r\n");
      out.write("		\r\n");
      out.write("			<!-- Parameter -->\r\n");
      out.write("			<input type=\"hidden\" name=\"pageNumber\" id=\"pageNumber\" value=\"");
      out.print(pageNumber);
      out.write("\" />\r\n");
      out.write("			<input type=\"hidden\" name=\"bunch\" id=\"bunch\" value=\"");
      out.print(bunch);
      out.write("\" />\r\n");
      out.write("			<input type=\"hidden\" name=\"searchOption\" id=\"searchOption\" value=\"bbsTitle\" />\r\n");
      out.write("			<input type=\"hidden\" name=\"dateOption\" id=\"dateOption\" value=\"all\" />\r\n");
      out.write("			<input type=\"hidden\" name=\"startDate\" id=\"startDateValue\" value=\"");
      out.print(startDate);
      out.write("\"/>\r\n");
      out.write("			<input type=\"hidden\" name=\"endDate\" id=\"endDateValue\" value=\"");
      out.print(endDate);
      out.write("\" />\r\n");
      out.write("			<input type=\"hidden\" name=\"searchWord\" id=\"searchWord\" \r\n");
      out.write("			");
if (searchWord != null) { 
      out.write("\r\n");
      out.write("			value=\"");
      out.print(searchWord);
      out.write('"');
      out.write(' ');
} 
      out.write(" />\r\n");
      out.write("			<input type=\"hidden\" name=\"sort\" id=\"sort\" value=\"");
      out.print(sort);
      out.write("\" />\r\n");
      out.write("			\r\n");
      out.write("			<table> <!-- 검색 테이블 -->\r\n");
      out.write("			\r\n");
      out.write("				<tr> <!-- 검색 키워드 출력 -->\r\n");
      out.write("					");
if(searchWord != null && !searchWord.equals("")) {
      out.write("\r\n");
      out.write("					<th style=\"border:0; line-height:50px; text-align: left; width:200px;\">\r\n");
      out.write("						검색 단어 : [");
      out.print(searchWord);
      out.write("] \r\n");
      out.write("					</th> ");
}
      out.write("\r\n");
      out.write("					\r\n");
      out.write("					<th> <!-- 날짜 옵션 선택 -->\r\n");
      out.write("						<div class=\"btn-group\">\r\n");
      out.write("							<a class=\"btn btn-default dropdown-toggle btn-select\" href=\"#\"\r\n");
      out.write("								data-toggle=\"dropdown\" id=\"currentDate\" style=\"width: 90px;\">전체 기간\r\n");
      out.write("							</a>\r\n");
      out.write("							<ul class=\"dropdown-menu\" style=\"width:300px;\">\r\n");
      out.write("								<li>\r\n");
      out.write("									<p style=\"margin:0px 10px; display:inline;\">검색 기간</p>\r\n");
      out.write("									<input type=\"text\" id=\"startDate\" style=\"width:90px; margin:0px 5px;\" value=\"00.01.01\" />\r\n");
      out.write("									<p style=\"line-height:20px; display:inline;\">~</p>\r\n");
      out.write("									<input type=\"text\" id=\"endDate\" style=\"width:90px; margin:0px 5px;\" value=\"");
      out.print(endDate);
      out.write("\"/>\r\n");
      out.write("								</li>\r\n");
      out.write("								<li class=\"divider\"></li>\r\n");
      out.write("								<li><a onClick=\"javascript:applyDate(this, 'all')\">전체 기간</a></li>\r\n");
      out.write("								<li><a onClick=\"javascript:applyDate(this, '1d')\">1일</a></li>\r\n");
      out.write("								<li><a onClick=\"javascript:applyDate(this, '1w')\">1주</a></li>\r\n");
      out.write("								<li><a onClick=\"javascript:applyDate(this, '1m')\">1개월</a></li>\r\n");
      out.write("								<li><a onClick=\"javascript:applyDate(this, '6m')\">6개월</a></li>\r\n");
      out.write("								<li><a onClick=\"javascript:applyDate(this, '1y')\">1년</a></li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("					</th>\r\n");
      out.write("					\r\n");
      out.write("					<th> <!-- 검색 옵션 선택 -->\r\n");
      out.write("						<div class=\"btn-group\">\r\n");
      out.write("							<a class=\"btn btn-default dropdown-toggle btn-select\" href=\"#\"\r\n");
      out.write("								data-toggle=\"dropdown\" id=\"currentSearch\" style=\"width: 90px;\">제목만\r\n");
      out.write("							</a>\r\n");
      out.write("							<ul class=\"dropdown-menu\">\r\n");
      out.write("								<li><a onClick=\"javascript:applyOption(this, 'bbsTitle')\">제목만</a></li>\r\n");
      out.write("								<li><a onClick=\"javascript:applyOption(this, 'bbsContent')\">제목+내용</a></li>\r\n");
      out.write("								<li><a onClick=\"javascript:applyOption(this, 'userID')\">작성자</a></li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("					</th>\r\n");
      out.write("					\r\n");
      out.write("					<th> <!-- 검색 창 -->\r\n");
      out.write("						<div class=\"input-group\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" placeholder=\"Search\"\r\n");
      out.write("								id=\"searchWordInput\" />\r\n");
      out.write("							<div class=\"input-group-btn\">\r\n");
      out.write("								<button type=\"submit\" class=\"btn btn-default\" onClick=\"javascript:$('#pageNumber').val(1)\">\r\n");
      out.write("									<span class=\"glyphicon glyphicon-search\"></span>\r\n");
      out.write("								</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</th>\r\n");
      out.write("					\r\n");
      out.write("					<th> <!-- n개씩 보기 -->\r\n");
      out.write("						<div class=\"btn-group\">\r\n");
      out.write("							<a class=\"btn btn-default dropdown-toggle btn-select\" href=\"#\"\r\n");
      out.write("								data-toggle=\"dropdown\">");
      out.print(bunch);
      out.write("개씩 <span class=\"caret\"></span></a>\r\n");
      out.write("							<ul class=\"dropdown-menu\">\r\n");
      out.write("								<li><a class=\"10\" onClick=\"javascript:bunchView(this)\">10개씩</a></li>\r\n");
      out.write("								<li><a class=\"15\" onClick=\"javascript:bunchView(this)\">15개씩</a></li>\r\n");
      out.write("								<li><a class=\"20\" onClick=\"javascript:bunchView(this)\">20개씩</a></li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("					</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("		\r\n");
      out.write("		<!-- 게시판 테이블 -->\r\n");
      out.write("		<table class=\"table table-striped\"\r\n");
      out.write("			style=\"text-align: center; border: 1px solid #dddddd\">\r\n");
      out.write("			\r\n");
      out.write("			<!-- 게시판 칼럼 -->\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th style=\"background-color: #eeeeee; text-align: center; width: 50px;\">번호</th>\r\n");
      out.write("					<th style=\"background-color: #eeeeee; text-align: center;\">제목\r\n");
      out.write("					");
 if(sort.equals("BBSTITLE")) {
      out.write("\r\n");
      out.write("						<a onClick=\"javascript:sort('BBSTITLE DESC')\"><span class=\"glyphicon glyphicon-chevron-up\"></span></a>\r\n");
      out.write("					");
 } else {
      out.write("\r\n");
      out.write("						<a onClick=\"javascript:sort('BBSTITLE')\"><span class=\"glyphicon glyphicon-chevron-down\"></span></a>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("					</th>\r\n");
      out.write("					<th style=\"background-color: #eeeeee; text-align: center; width: 80px;\">작성자\r\n");
      out.write("					");
 if(sort.equals("USERID")) {
      out.write("\r\n");
      out.write("						<a onClick=\"javascript:sort('USERID DESC')\"><span class=\"glyphicon glyphicon-chevron-up\"></span></a>\r\n");
      out.write("					");
 } else {
      out.write("\r\n");
      out.write("						<a onClick=\"javascript:sort('USERID')\"><span class=\"glyphicon glyphicon-chevron-down\"></span></a>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("					</th>\r\n");
      out.write("					<th style=\"background-color: #eeeeee; text-align: center; width: 250px;\">작성일자\r\n");
      out.write("					");
 if(sort.equals("BBSDATE")) {
      out.write("\r\n");
      out.write("						<a onClick=\"javascript:sort('BBSDATE DESC')\"><span class=\"glyphicon glyphicon-chevron-up\"></span></a>\r\n");
      out.write("					");
 } else {
      out.write("\r\n");
      out.write("						<a onClick=\"javascript:sort('BBSDATE')\"><span class=\"glyphicon glyphicon-chevron-down\"></span></a>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("					</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("			\r\n");
      out.write("			<!-- 게시판 목록 -->\r\n");
      out.write("			<tbody>\r\n");
      out.write("				");

					BbsDAO bbsDAO = new BbsDAO(); // DAO 객체 선언
					if(searchWord == null) // 검색하지 않았을 경우 일반 출력
					list = bbsDAO.getList(pageNumber, bunch);
					else // 검색했을 경우 파라미터에 따라 출력
					list = bbsDAO.getList(searchOption, searchWord, pageNumber, bunch, startDate, endDate, sort);
					for(int n = 0; n < list.size(); n++) {// for문으로 게시글 출력 (n개씩 보기)
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>");
      out.print( list.get(n).getBbsID() );
      out.write("</td>\r\n");
      out.write("						<td><a href=\"view.jsp?bbsID=");
      out.print( list.get(n).getBbsID() );
      out.write('"');
      out.write('>');
      out.print( list.get(n).getBbsTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>") );
      out.write("</a></td>\r\n");
      out.write("						<td>");
      out.print( list.get(n).getUserID() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print( list.get(n).getBbsDate().substring(2,16));
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");
}
      out.write("\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		\r\n");
      out.write("		");
if(pageNumber > 5) { // 6 페이지 이상이라면 이전 버튼 활성화
      out.write("\r\n");
      out.write("		<a onClick=\"javascript:startPage()\" class=\"btn btn-success btn-arrow-left\">&lt;&lt;</a> \r\n");
      out.write("		<a onClick=\"javascript:prevPage()\" class=\"btn btn-success btn-arrow-left\">&lt;</a> ");
} 
		
		for (i=1+(start-1)*5; i<=end; i++) { //n ~ n+4 페이지 버튼 출력 
			// 다음 페이지가 존재하면 해당 페이지 버튼 활성화
			if(bbsDAO.nextPage(i, bunch, searchOption, searchWord, startDate, endDate)) {
				if(i==pageNumber) { // 현재 페이지는 다른 css 적용
      out.write("\r\n");
      out.write("					<a onClick=\"javascript:currentPage(this)\" class=\"btn btn-info\">");
      out.print(i);
      out.write("</a>\r\n");
      out.write("				");
} else {
      out.write("\r\n");
      out.write("					<a onClick=\"javascript:currentPage(this)\"class=\"btn btn-light\">");
      out.print(i);
      out.write("</a>");
}}} 
		
		// 5n 페이지의 다음 페이지가 존재하면 다음 버튼 활성화
		if(bbsDAO.nextPage(end + 1, bunch, searchOption, searchWord, startDate, endDate)) {
      out.write("\r\n");
      out.write("			<a onClick=\"javascript:nextPage()\" class=\"btn btn-success btn-arrow-right\">&gt;</a> \r\n");
      out.write("			");
 if(searchWord != null) {
      out.write("\r\n");
      out.write("				<a onClick=\"javascript:endPage('");
      out.print(bbsDAO.getTotal(
						searchOption, searchWord, startDate, endDate) 
				);
      out.write("')\"class=\"btn btn-success btn-arrow-right\">&gt;&gt;</a>");
} 
			else { 
      out.write("<a onClick=\"javascript:endPage('");
      out.print(bbsDAO.getTotal() );
      out.write("')\"\r\n");
      out.write("			class=\"btn btn-success btn-arrow-right\">&gt;&gt;</a>");
}} 
      out.write("\r\n");
      out.write("		<a href=\"write.jsp\" class=\"btn btn-primary pull-right\">글쓰기</a>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.2.1.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap-datepicker.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap-datepicker.ko.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
